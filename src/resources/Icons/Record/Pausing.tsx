import * as React from 'react';
import Svg, { Path, SvgProps } from 'react-native-svg';

function Pausing(
  props: React.JSX.IntrinsicAttributes &
    React.JSX.IntrinsicClassAttributes<Svg> &
    Pick<
      Readonly<SvgProps>,
      | 'id'
      | 'children'
      | 'style'
      | 'title'
      | 'clipPath'
      | 'marker'
      | 'mask'
      | 'fill'
      | 'onLayout'
      | 'testID'
      | 'nativeID'
      | 'accessible'
      | 'accessibilityActions'
      | 'accessibilityLabel'
      | 'aria-label'
      | 'accessibilityRole'
      | 'accessibilityState'
      | 'aria-busy'
      | 'aria-checked'
      | 'aria-disabled'
      | 'aria-expanded'
      | 'aria-selected'
      | 'aria-labelledby'
      | 'accessibilityHint'
      | 'accessibilityValue'
      | 'aria-valuemax'
      | 'aria-valuemin'
      | 'aria-valuenow'
      | 'aria-valuetext'
      | 'onAccessibilityAction'
      | 'importantForAccessibility'
      | 'aria-hidden'
      | 'aria-live'
      | 'aria-modal'
      | 'role'
      | 'accessibilityLiveRegion'
      | 'accessibilityLabelledBy'
      | 'accessibilityElementsHidden'
      | 'accessibilityViewIsModal'
      | 'onAccessibilityEscape'
      | 'onAccessibilityTap'
      | 'onMagicTap'
      | 'accessibilityIgnoresInvertColors'
      | 'accessibilityLanguage'
      | 'hitSlop'
      | 'pointerEvents'
      | 'removeClippedSubviews'
      | 'collapsable'
      | 'needsOffscreenAlphaCompositing'
      | 'renderToHardwareTextureAndroid'
      | 'focusable'
      | 'shouldRasterizeIOS'
      | 'isTVSelectable'
      | 'hasTVPreferredFocus'
      | 'tvParallaxProperties'
      | 'tvParallaxShiftDistanceX'
      | 'tvParallaxShiftDistanceY'
      | 'tvParallaxTiltAngle'
      | 'tvParallaxMagnification'
      | 'onStartShouldSetResponder'
      | 'onMoveShouldSetResponder'
      | 'onResponderEnd'
      | 'onResponderGrant'
      | 'onResponderReject'
      | 'onResponderMove'
      | 'onResponderRelease'
      | 'onResponderStart'
      | 'onResponderTerminationRequest'
      | 'onResponderTerminate'
      | 'onStartShouldSetResponderCapture'
      | 'onMoveShouldSetResponderCapture'
      | 'onTouchStart'
      | 'onTouchMove'
      | 'onTouchEnd'
      | 'onTouchCancel'
      | 'onTouchEndCapture'
      | 'onPointerEnter'
      | 'onPointerEnterCapture'
      | 'onPointerLeave'
      | 'onPointerLeaveCapture'
      | 'onPointerMove'
      | 'onPointerMoveCapture'
      | 'onPointerCancel'
      | 'onPointerCancelCapture'
      | 'onPointerDown'
      | 'onPointerDownCapture'
      | 'onPointerUp'
      | 'onPointerUpCapture'
      | 'width'
      | 'onPressIn'
      | 'onPressOut'
      | 'height'
      | 'color'
      | 'fontSize'
      | 'fontWeight'
      | 'delayLongPress'
      | 'delayPressIn'
      | 'delayPressOut'
      | 'disabled'
      | 'onLongPress'
      | 'onPress'
      | 'x'
      | 'y'
      | 'opacity'
      | 'transform'
      | 'rotation'
      | 'scaleX'
      | 'scaleY'
      | 'translateX'
      | 'translateY'
      | 'fontFamily'
      | 'origin'
      | 'viewBox'
      | 'fillOpacity'
      | 'fillRule'
      | 'stroke'
      | 'strokeWidth'
      | 'strokeOpacity'
      | 'strokeDasharray'
      | 'strokeDashoffset'
      | 'strokeLinecap'
      | 'strokeLinejoin'
      | 'strokeMiterlimit'
      | 'vectorEffect'
      | 'clipRule'
      | 'translate'
      | 'originX'
      | 'originY'
      | 'scale'
      | 'skew'
      | 'skewX'
      | 'skewY'
      | 'markerStart'
      | 'markerMid'
      | 'markerEnd'
      | 'font'
      | 'fontStyle'
      | 'fontVariant'
      | 'fontStretch'
      | 'textAnchor'
      | 'textDecoration'
      | 'letterSpacing'
      | 'wordSpacing'
      | 'kerning'
      | 'fontFeatureSettings'
      | 'fontVariantLigatures'
      | 'fontVariationSettings'
    > & { readonly preserveAspectRatio?: string | undefined } & {},
) {
  return (
    <Svg
      width={150}
      height={150}
      viewBox='0 0 175 175'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}>
      <Path
        opacity={0.2}
        d='M136.799 136.799c27.338-27.338 27.338-71.662 0-99-27.338-27.338-71.662-27.338-99 0-27.338 27.338-27.338 71.662 0 99 27.338 27.338 71.662 27.338 99 0z'
        fill='#C547C8'
      />
      <Path
        opacity={0.2}
        d='M130.785 130.785c24.076-24.077 24.076-63.113 0-87.19-24.077-24.077-63.113-24.077-87.19 0-24.077 24.077-24.077 63.113 0 87.19 24.077 24.077 63.113 24.077 87.19 0z'
        fill='#E69EE4'
      />
      <Path
        opacity={0.2}
        d='M122.99 122.991c19.786-19.786 19.786-51.864 0-71.65-19.785-19.785-51.864-19.785-71.649 0-19.785 19.786-19.785 51.864 0 71.65 19.785 19.785 51.864 19.785 71.649 0z'
        fill='#F9F3FA'
      />
      <Path
        d='M113.5 83.902c2 1.155 2 4.041 0 5.196l-36.75 21.218c-2 1.154-4.5-.289-4.5-2.598V65.282c0-2.309 2.5-3.752 4.5-2.598l36.75 21.218z'
        fill='#F0F7FF'
      />
    </Svg>
  );
}

export default Pausing;
